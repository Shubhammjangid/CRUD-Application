@using CRUD.Data
@model IEnumerable<CRUD.Models.StudentInfo>

@{
    ViewData["Title"] = "ShowDetail";
}

<h1>ShowDetail</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CollegeName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CourseName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            DataInfo dataInfo = new DataInfo();
           
            List<StudentInfo> energy = new List<StudentInfo>();
            energy = dataInfo.FetchAll();
        }
@foreach (var item in energy) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CollegeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CourseName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit","Crud", new { id=item.Id}) |
                @Html.ActionLink("Details", "Details", new {  id=item.Id  }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.Id  })
            </td>
        </tr>
}
    </tbody>

</table>
